* Hans
** Intro
=Hans= was named after legendary composer =Hans Zimmer=.
*** Important Note
I really encourage all Emacs users to use their own configs and write their own, we can learn a lot about Emacs
internals and Emacs way of doing things, I learned a lot from =doom-emacs= and =spacemacs= and I'm using =doom-themes= almost
all the time and I really hope that you find something useful in my source code, I don't expect anyone to use the whole codebase
but if so I would be so happy that you contribute and use this project.
** Ideas
=Hans= is built around some main ideas, some of them are not implemented yet.
+ First class support for Emacs keybindings.
+ Startup time matters a lot so it should always stay fast as possible.
+ Core should remain as simple as possible.
+ KISS (keep it simple stupid).
+ Modularity comes first .
+ No duplicate packages, focus on one (ex helm & ivy)
+ Ability to install modules from third-party resources (TBA).
** Getting Started
#+BEGIN_SRC sh
# backup your existing .emacs.d
git clone git@gitlab.com:amirrezaask/hans.git ~/.emacs.d
cd ~/.emacs.d
make compile # only first time or after the updates
#+END_SRC
** Terminology
*** Core
=Hans= core consists of a few macros and functions, UI settings, and bootstrap code of =Hans=. This part should stay as small
as possible, and probably some day in the future UI should be dismantled from it as well. A breif introduction to some important
core macros
**** idle! 
=Hans= idle! macro takes multiple forms and evalutes them when Emacs is idle for 1 sec using =run-with-idle-timer=.
*** Modules
=Hans= modules are a mix of packages and configurations. They conventionaly created using =use-package=, maybe some day if we added
=Evil= we could customize macro to our needs (for keybindings for example).
Each module can recieve =Args= which is basically a form that is defined in user-config and will be set as the module args, forexample look at UI module and user-config file. Module args names are in the form of 
=hans/--module-[MODULENAMEF]-args=.
** Credits & Thanks 
+ =hlissner= (doom-emacs) creator for his amazing optimization ideas.
+ =R.M.S= (Richard Mathew Stallman) for creating =GNU= & =Emacs= the amazing platform we love to use.
+ Creator of all packages we use.
+ Emacs community.
